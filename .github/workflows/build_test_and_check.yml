name: build-test-and-check

on:
  push:
    branches:
      - master
      - develop
    paths:
      - '**.rs'
      - '**.js'
      - '**.json'
      - '**.html'
      - 'Cargo.lock'
      - '**Cargo.toml'
      - 'diesel.toml'
  pull_request:
    paths:
      - '**.rs'
      - '**.js'
      - '**.json'
      - '**.html'
      - 'Cargo.lock'
      - '**Cargo.toml'
      - 'diesel.toml'

env:
  CARGO_TERM_COLOR: always
  THOTH_GRAPHQL_API: https://api.thoth.pub
  THOTH_EXPORT_API: https://export.thoth.pub
  TEST_REDIS_URL: redis://localhost:6379

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Set Rust toolchain version
        run: rustup override set stable
      - name: Build binary
        run: cargo build -vv
  test:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Run tests
        run: cargo test --workspace -vv
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Run linting
        run: cargo clippy --all --all-targets --all-features -- -D warnings
  format_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run format
        run: cargo fmt --all -- --check
